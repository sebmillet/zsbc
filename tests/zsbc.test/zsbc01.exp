# tests/zsbc.test/zsbc01.exp

set timeout 3
send_user "***   Arithmetic tests\n"

set tmp [exec $ZSBC -v]
regexp "$P *(\[^\n\]*)\n.*" $tmp tmp version
send_user "Using $P version $version, executable is $ZSBC\n"

set test "Checking $P version"
spawn echo $version
expect {
	-re "\[0-9.\]+d" { pass "\n\n   *****************\n   ***  WARNING  ***\n   *****************\n\n$P compiled with a DEBUG option\n\n" }
	-re "\[0-9.\]+"  { pass "$test" }
}

spawn "$ZSBC" -SCM
set test "Get GMP Library version"
expect {
	-nocase "gmp library" { pass "$test" }
	default { fail "Could not get GMP library version" }
}

set test "Addition"
send "102+103\n"
expect {
	"205" { pass "$test" }
	default { fail "$test" }
}

set test "Subtraction"
send "102-105\n"
expect {
	-- "-3" { pass "$test" }
	default { fail "$test" }
}

set test "Multiplication"
send "102*(-105)\n"
expect {
	-- "-10710" { pass "$test" }
	default { fail "$test" }
}

set test "Division"
send -- "-97/9\n"
expect {
	-- "-10" { pass "$test" }
	default { fail "$test" }
}

set test "Power"
send "(-102)^15\n"
expect {
	-- "-1345868338324129592144306208768" { pass "$test" }
	default { fail "$test" }
}

set test "Modulo"
send -- "-15300%97\n"
expect {
	-- "26" { pass "$test" }
	default { fail "$test" }
}

set test "Expression (1)"
send "1-(3+2^(5+8)/5)\n"
expect {
	-- "\-1640" { pass "$test" }
	default { fail "$test" }
}

set test "Expression (2)"
send "55\n2^((((8/3+1))))+((-3))*9/4\n66\n"
expect {
	-re "55\[^0-9\]*2\[^0-9\]*66\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Expression (3)"
send "77\n2^((((                           8/3          +        1) )))+( (-3) )* 9 /4\n88\n"
expect {
	-re "77\[^0-9\]*2\[^0-9\]*88\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Expression (4)"
send " 37   ^   43  \n"
expect {
	-re "27081588506598106040982953896258749653831334409506086433262944331453\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Multi-line number typing in"
send "9\n54\\\n32*2\\\n0\n8\n"
expect {
	-re "9\[^0-9\]*108640\[^0-9\]*8\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Checking object count ref is null"
send "quit\n"
expect {
	-re "OK.*number count.*should be 0.*: 0\[^0-9\]+OK.*expr_t.*count.*should be 0.*: 0\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

