## Generated by tests/gen.sh
##   01gmp-47.exp -> 02bc-47.exp
##   Date: Sun Dec 20 15:12:18 CET 2015
##
## git information: 01gmp-47.exp version used to generate 02bc-47.exp:
##   commit 778f6713dea63961e58e8976f3b134604e6f277d
##   Author: SÃ©bastien Millet <sebastien.millet1@club-internet.fr>
##   Date:   Fri Nov 27 22:00:31 2015 +0100

## *** DO NOT UPDATE MANUALLY ***

# tests/zsbc.test/02bc-47.exp

set timeout 3
spawn "$ZSBC" --SCM --numlib bc "$TESTDIR/01gmp-47.b"
send_user "***   BC - powmod and invmod\n"

set test "powmod (implicit)"
send "print 123,\"-\",2^10^100%97,\"-\",124,\"\n\"\n"
expect {
	"123-61-124" { pass "$test" }
	default { fail "$test" }
}

set test "powmod (explicit, lib function)"
send "print 125,\":\",powmod(2, 10^100, 97),\":\",126,\"\n\"\n"
expect {
	"125:61:126" { pass "$test" }
	default { fail "$test" }
}

set test "powmod (explicit, lib function) (2)"
send "print 127,\"::\",powmod(2, 10^100, 97)%50,\"::\",128,\"\n\"\n"
expect {
	"127::11::128" { pass "$test" }
	default { fail "$test" }
}

set test "_powmod (explicit, from .b source file)"
send "print 129,\":\",_powmod(2, 10^100, 97),\":\",130,\"\n\"\n"
expect {
	"129:61:130" { pass "$test" }
	default { fail "$test" }
}

set test "_powmod (explicit, from .b source file) (2)"
send "print 131,\"::\",_powmod(2, 10^100, 97)%50,\"::\",132,\"\n\"\n"
expect {
	"131::11::132" { pass "$test" }
	default { fail "$test" }
}

set test "invmod (explicit, from .b source file)"
send "print 204,\";\",_invmod(98, 997),\";\",804,\"\n\"\n"
expect {
	"204;234;804" { pass "$test" }
	default { fail "$test" }
}

set test "invmod (explicit, from .b source file) - when no invert exists"
send "205\n_invmod(10, 20)\n805\n"
expect {
	-re "205\[^0-9\]+Error.*Modulo by zero.*\[^0-9\]+805\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Checking object count ref is null"
send "quit\n"
expect {
	-re "OK.*number count.*should be 0.*: 0\[^0-9\]+OK.*expr_t.*count.*should be 0.*: 0\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

