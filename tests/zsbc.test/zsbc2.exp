# tests/zsbc.test/zsbc2.exp

set timeout 3
spawn "$ZSBC" -q
send_user "***   Error cases tests\n"

set test "Syntax error '101+'"
send "101+\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '101++102'"
send "101++202\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '^101'"
send "^101\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '1+(3*2'"
send "1+(3*2\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test"}
}

set test "Illegal character"
send "@\n"
expect {
	-re "illegal character.*" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0"
send "1/0\n"
expect {
	"Division by 0" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0 (2)"
send "101\n1%0\n102\n"
expect {
	-re "101\[^0-9\]*Division by 0\[^0-9\]*102" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0 (3)"
send "103\na=1\n104\na\na=1%0\n105\na\n"
expect {
	-re "103\[^0-9\]*104\[^0-9\]*1\[^0-9\]*Division by 0\[^0-9\]*105\[^0-9\]*1\[0-9\]*" { pass "$test" }
	default { fail "$test" }
}

send "quit\n"

