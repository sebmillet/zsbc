## Generated by tests/gen.sh
##   01gmp-03.exp -> 02bc-03.exp
##   Date: Sat Oct 3 15:41:35 CEST 2015
##
## git information: 01gmp-03.exp version used to generate 02bc-03.exp:
##   commit aa69e7a7633c63efce2e8fae1278658e8f267aff
##   Author: SÃ©bastien Millet <sebastien.millet1@club-internet.fr>
##   Date:   Sun Aug 30 13:27:19 2015 +0200

## *** DO NOT UPDATE MANUALLY ***

# tests/zsbc.test/02bc-03.exp

set timeout 3
spawn "$ZSBC" -SCM -numlib bc
send_user "***   BC - variable tests\n"

spawn "$ZSBC" -SCM -numlib bc
set test "Get BC library version"
expect {
	-nocase "bc library" { pass "$test" }
	default { fail "Could not get BC library version" }
}

set test "Variable assignment"
send "5\na=101\n6\n"
expect {
	-re "5\[^0-9\]*6.+" { pass "$test" }
	default { fail "$test" }
}

set test "Variable assignment as an expression"
send "7\n(a=101)\n8\n"
expect {
	-re "7\[^0-9\]*101\[^0-9\]*8.+" { pass "$test" }
	default { fail "$test" }
}

set test "Variable reading"
send "a+1\n"
expect {
	-re "102.+" { pass "$test" }
	default { fail "$test" }
}

set test "Multiple variables assignment"
send "a=1\nb=2\nc=3\ndef=4\na0=5\nbb1=6\ncharlie=7\ndelta=8\ne=9\nf=10\ng=11\ngolf=12\nzeta=13\n"
send "zeta\ngolf\ng\nf\ne\ndelta\ncharlie\nbb1\na0\ndef\nc\nb\na\n"
expect {
	-re "13.*12.*11.*10.*9.*8.*7.*6.*5.*4.*3.*2.*1.*" { pass "$test" }
	default { fail "$test" }
}

set test "Embedded variables assignment"
send "a=1+(b=1+(c=1+(d=1+(e=1+(f=1)))))\na\nb\nc\nd\ne\nf\n"
expect {
	-re "6\[^0-9\]+5\[^0-9\]+4\[^0-9\]+3\[^0-9\]+2\[^0-9\]+1\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Minus variable"
send -- "a=12\n-a\n"
expect {
	-- "-12" { pass "$test" }
	default { fail "$test" }
}

set test "All variables display"
send "tbl\[65000\]=0;tbl2\[60000\]=0;tbl2\[60001\]=0;tab\[0\]=0;tab\[10000\]=1;for(i=0;i<20000;++i){big\[i\]=i}\nsymbols\n"
expect {
	-re "a=12.*a0=5.*b=5.*bb1=6.*c=4.*charlie=7.*d=3.*def=4.*delta=8.*e=2.*f=1.*g=11.*golf=12.*zeta=13.*big.*: 20000 element.*tab.*: 2 element.*tbl.*: 1 element.*tbl2.*: 2 element" { pass "$test" }
	default { fail "$test" }
}

set test "Checking object count ref is null"
send "quit\n"
expect {
	-re "OK.*number count.*should be 0.*: 0\[^0-9\]+OK.*expr_t.*count.*should be 0.*: 0\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

