# tests/zsbc.test/01gmp-02.exp

set timeout 3
send_user "***   GMP - Error cases tests\n"

spawn "$ZSBC" --SCM

set test "Get GMP Library version"
expect {
	-nocase "gmp library" { pass "$test" }
	default { fail "Could not get GMP library version" }
}

set test "Syntax error '101+'"
send "101+\n0\n0\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '101++102'"
send "101++202\n0\n0\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '^101'"
send "^101\n0\n0\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test" }
}

set test "Syntax error '1+(3*2'"
send "1+(3*2\n"
expect {
	-re "syntax error.*" { pass "$test" }
	default { fail "$test"}
}

set test "Illegal character"
send "@\n"
expect {
	-re "illegal character.*" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0"
send "1/0\n"
expect {
	"Division by 0" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0 (2)"
send "101\n1%0\n102\n"
expect {
	-re "101\[^0-9\]*Division by 0\[^0-9\]*102" { pass "$test" }
	default { fail "$test" }
}

set test "Division by 0 (3)"
send "103\na=1\n104\na\na=1%0\n105\na\n"
expect {
	-re "103\[^0-9\]*104\[^0-9\]*1\[^0-9\]*Division by 0\[^0-9\]*105\[^0-9\]*1\[0-9\]*" { pass "$test" }
	default { fail "$test" }
}

set test "Wrong while() (1)"
send "101\nwhile (1);\n202\n"
expect {
	-re "101.+syntax error\[^0-9\]+202\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Wrong while() (2)"
send "303\nwhile () a\n404\n"
expect {
	-re "303.+syntax error\[^0-9\]+404\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Error inside an array index (1)"
send "828\nt\[1/(1-1)\]=10\nt\[0\]\nt\[1\]\n919\n"
expect {
	-re "828.+Division by 0\[^0-9\]+0\[^0-9\]+0\[^0-9\]+919\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Error inside an array index (2)"
send "838\n++t\[1/(1-1)\]\nt\[0\]\nt\[1\]\n929\n"
expect {
	-re "838.+Division by 0\[^0-9\]+0\[^0-9\]+0\[^0-9\]+929\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Error inside an array index (3)"
send "838\nt\[1/(1-1)\]++\nt\[0\]\nt\[1\]\n939\n"
expect {
	-re "838.+Division by 0\[^0-9\]+0\[^0-9\]+0\[^0-9\]+939\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

set test "Checking object count ref is null"
send "quit\n"
expect {
	-re "OK.*number count.*should be 0.*: 0\[^0-9\]+OK.*expr_t.*count.*should be 0.*: 0\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

