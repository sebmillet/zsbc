# tests/zsbc.test/zsbc3.exp

set timeout 3
spawn "$ZSBC" -V
send_user "***   Variable tests\n"

set test "Variable assignment"
send "5\na=101\n6\n"
expect {
	-re "5\[^0-9\]*6.+" { pass "$test" }
	default { fail "$test" }
}

set test "Variable assignment as an expression"
send "7\n(a=101)\n8\n"
expect {
	-re "7\[^0-9\]*101\[^0-9\]*8.+" { pass "$test" }
	default { fail "$test" }
}

set test "Variable reading"
send "a+1\n"
expect {
	-re "102.+" { pass "$test" }
	default { fail "$test" }
}

set test "Multiple variables assignment"
send "a=1\nb=2\nc=3\ndef=4\na0=5\nbb1=6\ncharlie=7\ndelta=8\ne=9\nf=10\ng=11\ngolf=12\nzeta=13\n"
send "zeta\ngolf\ng\nf\ne\ndelta\ncharlie\nbb1\na0\ndef\nc\nb\na\n"
expect {
	-re "13.*12.*11.*10.*9.*8.*7.*6.*5.*4.*3.*2.*1.*" { pass "$test" }
	default { fail "$test" }
}

set test "Embedded variables assignment"
send "a=1+(b=1+(c=1+(d=1+(e=1+(f=1)))))\na\nb\nc\nd\ne\nf\n"
expect {
	-re "6.*5.*4.*3.*2.*1.*" { pass "$test" }
	default { fail "$test" }
}

set test "minus Variable"
send -- "a=12\n-a\n"
expect {
	-- "-12" { pass "$test" }
	default { fail "$test" }
}

set test "Checking object count ref at the end of zsbc3.exp"
send "quit\n"
expect {
	-re "OK.*number count.*should be 0.*: 0\[^0-9\]+OK.*expr_t.*count.*should be 0.*: 0\[^0-9\]+" { pass "$test" }
	default { fail "$test" }
}

